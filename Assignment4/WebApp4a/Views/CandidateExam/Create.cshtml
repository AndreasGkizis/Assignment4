@using Microsoft.AspNetCore.Identity
@using ModelLibrary.Models;
@using System.Security.Claims;
@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager
@model ModelLibrary.Models.Exams.CandidateExam

@{
    ViewData["Title"] = "Create";
    var UserId = UserManager.GetUserId(ViewBag.Princip);

}


<h1>Create</h1>
<h4>CandidateExam</h4>
<hr />
<div class="row">
    <div class="col-md-4">

        <form asp-action="Create">
            @if (false)
            {
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Result" class="control-label"></label>
                    <input asp-for="Result" class="form-control" />
                    <span asp-validation-for="Result" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="MaxScore" class="control-label"></label>
                    <input asp-for="MaxScore" class="form-control" />
                    <span asp-validation-for="MaxScore" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="PercentScore" class="control-label"></label>
                    <input asp-for="PercentScore" class="form-control" />
                    <span asp-validation-for="PercentScore" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="ExamDate" class="control-label"></label>
                    <input asp-for="ExamDate" class="form-control" />
                    <span asp-validation-for="ExamDate" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="ReportDate" class="control-label"></label>
                    <input asp-for="ReportDate" class="form-control" />
                    <span asp-validation-for="ReportDate" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="CandidateScore" class="control-label"></label>
                    <input asp-for="CandidateScore" class="form-control" />
                    <span asp-validation-for="CandidateScore" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="AssessmentCode" class="control-label"></label>
                    <input asp-for="AssessmentCode" class="form-control" />
                    <span asp-validation-for="AssessmentCode" class="text-danger"></span>
                </div>

            }
           
            <div class="form-group">
                @Html.LabelFor(model => model.Exam,htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("examsSelectList", "Select Exam")
                    @Html.ValidationMessageFor(model => model.Exam, "", new { @class = "text-danger" })
                </div>
            </div>
            <input name="UserId" value="@UserId" type="hidden" />
            


            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
